---

- name: "Install postgresql {{ postgresql_version }} packages ..."
  become: yes
  tags: postgresql
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - python-psycopg2
    - postgresql
    - postgresql-contrib
    - pgadmin3
  notify: Start postgresql

- name: Determine postgres version
  tags: postgresql
  find:
    paths: "/etc/postgresql/"
    file_type: directory
  register: postgresql_versions

- name: Print postgresql_versions
  tags: postgresql
  debug:
    msg: "[{{ postgresql_versions }}]"

- name: Get latest installed postgresql
  tags: postgresql
  set_fact:
    postgresql_version_obj: "{{ postgresql_versions.files | sort(attribute='ctime',reverse=true) | first }}"

- name: Get latest installed postgresql
  tags: postgresql
  set_fact:
    postgresql_version: "{{ postgresql_version_obj.path | basename }}"

- name: Ensure postgresql is running automatically at boot
  become: yes
  tags: postgresql
  service:
    name: postgresql
    enabled: yes

- name: configure pg_hba.conf
  become: yes
  tags: postgresql
  template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
    backup: no
    owner: postgres
  notify: Restart postgresql

- name: unset ip to listen on to ipv4 localhost
  tags: postgresql
  become: yes
  lineinfile:
    dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
    insertbefore: '^#listen_addresses'
    line: "listen_addresses = '127.0.0.1'"
    state: absent

- name: check whether iptables file exists
  tags: postgresql
  stat:
    path: /etc/sysconfig/iptables
  register: iptables

- name: fix postgresql in /etc/sysconfig/iptables file
  tags: postgresql
  become: yes
  lineinfile:
    dest: /etc/sysconfig/iptables
    line: '-A INPUT -p tcp -m tcp --dport 5432 -j ACCEPT'
    state: present
    insertbefore: ^COMMIT
  notify: restart iptables
  when: iptables is defined and iptables.stat.exists

- name: set listen on on ipv4 addresses
  tags: postgresql
  become: yes
  lineinfile:
    dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
    insertbefore: '^#listen_addresses'
    line: "listen_addresses = '*'"
    state: present
  notify: Restart postgresql

- name: Enable passwordless sudo
  tags: postgresql
  become: yes
  lineinfile:
    dest: /etc/sudoers
    regexp: ^vagrant
    line: "vagrant ALL=(postgres) NOPASSWD:/bin/sh"

- name: Create vagrant user
  tags: postgresql
  become: yes
  become_user: postgres
  postgresql_user:
    name: vagrant
    password: vagrant
    role_attr_flags: SUPERUSER
    state: present
    encrypted: yes

- name: Fix default database encoding (set it to UTF8)
  tags: postgresql
  become: yes
  become_user: postgres
  shell: "psql -f {{ role_path }}/files/psql_encoding.sql"